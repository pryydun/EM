@page "/events"
@inject IViewEventsByNameUseCase ViewEventsByNameUseCase
@inject AuthenticationStateProvider AuthenticationStateProvider

<h3>EventList</h3>

<SearchComponent OnSearch="HandleSearch"></SearchComponent>
<br />

<EventListComponent SearchEventFilter="@searchEventName"></EventListComponent>
<br />

@if (CanAddEvent)
{
    <div class="d-flex justify-content-start mb-3">
        <a href="/add-event" class="btn btn-success btn-lg">Add Event</a>
    </div>
}

@code {
    private string? searchEventName;
    private bool CanAddEvent { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity?.IsAuthenticated == true)
        {
            CanAddEvent = user.HasClaim("role", "Admin") || user.HasClaim("role", "Organizer");
        }
    }

    private void HandleSearch(string searchFilter)
    {
        searchEventName = searchFilter;
    }
}

